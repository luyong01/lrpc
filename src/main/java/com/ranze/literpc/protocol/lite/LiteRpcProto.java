// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: literpc.proto

package com.ranze.literpc.protocol.lite;

public final class LiteRpcProto {
  private LiteRpcProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RpcMetaOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RpcMeta)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 callId = 1;</code>
     */
    long getCallId();

    /**
     * <code>int32 compressType = 2;</code>
     */
    int getCompressType();

    /**
     * <code>.RpcRequest request = 3;</code>
     */
    boolean hasRequest();
    /**
     * <code>.RpcRequest request = 3;</code>
     */
    com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest getRequest();
    /**
     * <code>.RpcRequest request = 3;</code>
     */
    com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequestOrBuilder getRequestOrBuilder();

    /**
     * <code>.RpcResponse response = 4;</code>
     */
    boolean hasResponse();
    /**
     * <code>.RpcResponse response = 4;</code>
     */
    com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse getResponse();
    /**
     * <code>.RpcResponse response = 4;</code>
     */
    com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponseOrBuilder getResponseOrBuilder();
  }
  /**
   * Protobuf type {@code RpcMeta}
   */
  public  static final class RpcMeta extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RpcMeta)
      RpcMetaOrBuilder {
    // Use RpcMeta.newBuilder() to construct.
    private RpcMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcMeta() {
      callId_ = 0L;
      compressType_ = 0;
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RpcMeta(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              callId_ = input.readInt64();
              break;
            }
            case 16: {

              compressType_ = input.readInt32();
              break;
            }
            case 26: {
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.Builder subBuilder = null;
              if (request_ != null) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.Builder subBuilder = null;
              if (response_ != null) {
                subBuilder = response_.toBuilder();
              }
              response_ = input.readMessage(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(response_);
                response_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcMeta_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta.class, com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta.Builder.class);
    }

    public static final int CALLID_FIELD_NUMBER = 1;
    private long callId_;
    /**
     * <code>int64 callId = 1;</code>
     */
    public long getCallId() {
      return callId_;
    }

    public static final int COMPRESSTYPE_FIELD_NUMBER = 2;
    private int compressType_;
    /**
     * <code>int32 compressType = 2;</code>
     */
    public int getCompressType() {
      return compressType_;
    }

    public static final int REQUEST_FIELD_NUMBER = 3;
    private com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest request_;
    /**
     * <code>.RpcRequest request = 3;</code>
     */
    public boolean hasRequest() {
      return request_ != null;
    }
    /**
     * <code>.RpcRequest request = 3;</code>
     */
    public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest getRequest() {
      return request_ == null ? com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.getDefaultInstance() : request_;
    }
    /**
     * <code>.RpcRequest request = 3;</code>
     */
    public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequestOrBuilder getRequestOrBuilder() {
      return getRequest();
    }

    public static final int RESPONSE_FIELD_NUMBER = 4;
    private com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse response_;
    /**
     * <code>.RpcResponse response = 4;</code>
     */
    public boolean hasResponse() {
      return response_ != null;
    }
    /**
     * <code>.RpcResponse response = 4;</code>
     */
    public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse getResponse() {
      return response_ == null ? com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.getDefaultInstance() : response_;
    }
    /**
     * <code>.RpcResponse response = 4;</code>
     */
    public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponseOrBuilder getResponseOrBuilder() {
      return getResponse();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (callId_ != 0L) {
        output.writeInt64(1, callId_);
      }
      if (compressType_ != 0) {
        output.writeInt32(2, compressType_);
      }
      if (request_ != null) {
        output.writeMessage(3, getRequest());
      }
      if (response_ != null) {
        output.writeMessage(4, getResponse());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (callId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, callId_);
      }
      if (compressType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, compressType_);
      }
      if (request_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRequest());
      }
      if (response_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getResponse());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta)) {
        return super.equals(obj);
      }
      com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta other = (com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta) obj;

      boolean result = true;
      result = result && (getCallId()
          == other.getCallId());
      result = result && (getCompressType()
          == other.getCompressType());
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      result = result && (hasResponse() == other.hasResponse());
      if (hasResponse()) {
        result = result && getResponse()
            .equals(other.getResponse());
      }
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CALLID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCallId());
      hash = (37 * hash) + COMPRESSTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getCompressType();
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      if (hasResponse()) {
        hash = (37 * hash) + RESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getResponse().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RpcMeta}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RpcMeta)
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMetaOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcMeta_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcMeta_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta.class, com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta.Builder.class);
      }

      // Construct using com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        callId_ = 0L;

        compressType_ = 0;

        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          request_ = null;
          requestBuilder_ = null;
        }
        if (responseBuilder_ == null) {
          response_ = null;
        } else {
          response_ = null;
          responseBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcMeta_descriptor;
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta getDefaultInstanceForType() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta.getDefaultInstance();
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta build() {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta buildPartial() {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta result = new com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta(this);
        result.callId_ = callId_;
        result.compressType_ = compressType_;
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        if (responseBuilder_ == null) {
          result.response_ = response_;
        } else {
          result.response_ = responseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta) {
          return mergeFrom((com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta other) {
        if (other == com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta.getDefaultInstance()) return this;
        if (other.getCallId() != 0L) {
          setCallId(other.getCallId());
        }
        if (other.getCompressType() != 0) {
          setCompressType(other.getCompressType());
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        if (other.hasResponse()) {
          mergeResponse(other.getResponse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long callId_ ;
      /**
       * <code>int64 callId = 1;</code>
       */
      public long getCallId() {
        return callId_;
      }
      /**
       * <code>int64 callId = 1;</code>
       */
      public Builder setCallId(long value) {

        callId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 callId = 1;</code>
       */
      public Builder clearCallId() {

        callId_ = 0L;
        onChanged();
        return this;
      }

      private int compressType_ ;
      /**
       * <code>int32 compressType = 2;</code>
       */
      public int getCompressType() {
        return compressType_;
      }
      /**
       * <code>int32 compressType = 2;</code>
       */
      public Builder setCompressType(int value) {

        compressType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 compressType = 2;</code>
       */
      public Builder clearCompressType() {

        compressType_ = 0;
        onChanged();
        return this;
      }

      private com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          RpcRequest, RpcRequest.Builder, RpcRequestOrBuilder> requestBuilder_;
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public boolean hasRequest() {
        return requestBuilder_ != null || request_ != null;
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public Builder setRequest(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public Builder setRequest(
          com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public Builder mergeRequest(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest value) {
        if (requestBuilder_ == null) {
          if (request_ != null) {
            request_ =
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          request_ = null;
          requestBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.Builder getRequestBuilder() {

        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.getDefaultInstance() : request_;
        }
      }
      /**
       * <code>.RpcRequest request = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RpcRequest, RpcRequest.Builder, RpcRequestOrBuilder>
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RpcRequest, RpcRequest.Builder, RpcRequestOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }

      private com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse response_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          RpcResponse, RpcResponse.Builder, RpcResponseOrBuilder> responseBuilder_;
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public boolean hasResponse() {
        return responseBuilder_ != null || response_ != null;
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse getResponse() {
        if (responseBuilder_ == null) {
          return response_ == null ? com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.getDefaultInstance() : response_;
        } else {
          return responseBuilder_.getMessage();
        }
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public Builder setResponse(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse value) {
        if (responseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          response_ = value;
          onChanged();
        } else {
          responseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public Builder setResponse(
          com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.Builder builderForValue) {
        if (responseBuilder_ == null) {
          response_ = builderForValue.build();
          onChanged();
        } else {
          responseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public Builder mergeResponse(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse value) {
        if (responseBuilder_ == null) {
          if (response_ != null) {
            response_ =
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.newBuilder(response_).mergeFrom(value).buildPartial();
          } else {
            response_ = value;
          }
          onChanged();
        } else {
          responseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public Builder clearResponse() {
        if (responseBuilder_ == null) {
          response_ = null;
          onChanged();
        } else {
          response_ = null;
          responseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.Builder getResponseBuilder() {

        onChanged();
        return getResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponseOrBuilder getResponseOrBuilder() {
        if (responseBuilder_ != null) {
          return responseBuilder_.getMessageOrBuilder();
        } else {
          return response_ == null ?
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.getDefaultInstance() : response_;
        }
      }
      /**
       * <code>.RpcResponse response = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          RpcResponse, RpcResponse.Builder, RpcResponseOrBuilder>
          getResponseFieldBuilder() {
        if (responseBuilder_ == null) {
          responseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              RpcResponse, RpcResponse.Builder, RpcResponseOrBuilder>(
                  getResponse(),
                  getParentForChildren(),
                  isClean());
          response_ = null;
        }
        return responseBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RpcMeta)
    }

    // @@protoc_insertion_point(class_scope:RpcMeta)
    private static final com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta();
    }

    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcMeta>
        PARSER = new com.google.protobuf.AbstractParser<RpcMeta>() {
      public RpcMeta parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RpcMeta(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RpcMeta> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcMeta> getParserForType() {
      return PARSER;
    }

    public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcMeta getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RpcRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RpcRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string serviceName = 1;</code>
     */
    String getServiceName();
    /**
     * <code>string serviceName = 1;</code>
     */
    com.google.protobuf.ByteString
        getServiceNameBytes();

    /**
     * <code>string methodName = 2;</code>
     */
    String getMethodName();
    /**
     * <code>string methodName = 2;</code>
     */
    com.google.protobuf.ByteString
        getMethodNameBytes();
  }
  /**
   * Protobuf type {@code RpcRequest}
   */
  public  static final class RpcRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RpcRequest)
      RpcRequestOrBuilder {
    // Use RpcRequest.newBuilder() to construct.
    private RpcRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcRequest() {
      serviceName_ = "";
      methodName_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RpcRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              serviceName_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              methodName_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.class, com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.Builder.class);
    }

    public static final int SERVICENAME_FIELD_NUMBER = 1;
    private volatile Object serviceName_;
    /**
     * <code>string serviceName = 1;</code>
     */
    public String getServiceName() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        serviceName_ = s;
        return s;
      }
    }
    /**
     * <code>string serviceName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getServiceNameBytes() {
      Object ref = serviceName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        serviceName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METHODNAME_FIELD_NUMBER = 2;
    private volatile Object methodName_;
    /**
     * <code>string methodName = 2;</code>
     */
    public String getMethodName() {
      Object ref = methodName_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        methodName_ = s;
        return s;
      }
    }
    /**
     * <code>string methodName = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMethodNameBytes() {
      Object ref = methodName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        methodName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getServiceNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, serviceName_);
      }
      if (!getMethodNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, methodName_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getServiceNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, serviceName_);
      }
      if (!getMethodNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, methodName_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest)) {
        return super.equals(obj);
      }
      com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest other = (com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest) obj;

      boolean result = true;
      result = result && getServiceName()
          .equals(other.getServiceName());
      result = result && getMethodName()
          .equals(other.getMethodName());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SERVICENAME_FIELD_NUMBER;
      hash = (53 * hash) + getServiceName().hashCode();
      hash = (37 * hash) + METHODNAME_FIELD_NUMBER;
      hash = (53 * hash) + getMethodName().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RpcRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RpcRequest)
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.class, com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.Builder.class);
      }

      // Construct using com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        serviceName_ = "";

        methodName_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcRequest_descriptor;
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest getDefaultInstanceForType() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.getDefaultInstance();
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest build() {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest buildPartial() {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest result = new com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest(this);
        result.serviceName_ = serviceName_;
        result.methodName_ = methodName_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest) {
          return mergeFrom((com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest other) {
        if (other == com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest.getDefaultInstance()) return this;
        if (!other.getServiceName().isEmpty()) {
          serviceName_ = other.serviceName_;
          onChanged();
        }
        if (!other.getMethodName().isEmpty()) {
          methodName_ = other.methodName_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object serviceName_ = "";
      /**
       * <code>string serviceName = 1;</code>
       */
      public String getServiceName() {
        Object ref = serviceName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          serviceName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string serviceName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getServiceNameBytes() {
        Object ref = serviceName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          serviceName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string serviceName = 1;</code>
       */
      public Builder setServiceName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        serviceName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string serviceName = 1;</code>
       */
      public Builder clearServiceName() {

        serviceName_ = getDefaultInstance().getServiceName();
        onChanged();
        return this;
      }
      /**
       * <code>string serviceName = 1;</code>
       */
      public Builder setServiceNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        serviceName_ = value;
        onChanged();
        return this;
      }

      private Object methodName_ = "";
      /**
       * <code>string methodName = 2;</code>
       */
      public String getMethodName() {
        Object ref = methodName_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          methodName_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string methodName = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMethodNameBytes() {
        Object ref = methodName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          methodName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string methodName = 2;</code>
       */
      public Builder setMethodName(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        methodName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string methodName = 2;</code>
       */
      public Builder clearMethodName() {

        methodName_ = getDefaultInstance().getMethodName();
        onChanged();
        return this;
      }
      /**
       * <code>string methodName = 2;</code>
       */
      public Builder setMethodNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        methodName_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RpcRequest)
    }

    // @@protoc_insertion_point(class_scope:RpcRequest)
    private static final com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest();
    }

    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcRequest>
        PARSER = new com.google.protobuf.AbstractParser<RpcRequest>() {
      public RpcRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RpcRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RpcRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcRequest> getParserForType() {
      return PARSER;
    }

    public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RpcResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RpcResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 code = 1;</code>
     */
    int getCode();

    /**
     * <code>string reason = 2;</code>
     */
    String getReason();
    /**
     * <code>string reason = 2;</code>
     */
    com.google.protobuf.ByteString
        getReasonBytes();
  }
  /**
   * Protobuf type {@code RpcResponse}
   */
  public  static final class RpcResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RpcResponse)
      RpcResponseOrBuilder {
    // Use RpcResponse.newBuilder() to construct.
    private RpcResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RpcResponse() {
      code_ = 0;
      reason_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private RpcResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              code_ = input.readInt32();
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              reason_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.class, com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>int32 code = 1;</code>
     */
    public int getCode() {
      return code_;
    }

    public static final int REASON_FIELD_NUMBER = 2;
    private volatile Object reason_;
    /**
     * <code>string reason = 2;</code>
     */
    public String getReason() {
      Object ref = reason_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        reason_ = s;
        return s;
      }
    }
    /**
     * <code>string reason = 2;</code>
     */
    public com.google.protobuf.ByteString
        getReasonBytes() {
      Object ref = reason_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        reason_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != 0) {
        output.writeInt32(1, code_);
      }
      if (!getReasonBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, reason_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, code_);
      }
      if (!getReasonBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, reason_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse)) {
        return super.equals(obj);
      }
      com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse other = (com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse) obj;

      boolean result = true;
      result = result && (getCode()
          == other.getCode());
      result = result && getReason()
          .equals(other.getReason());
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode();
      hash = (37 * hash) + REASON_FIELD_NUMBER;
      hash = (53 * hash) + getReason().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RpcResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RpcResponse)
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.class, com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.Builder.class);
      }

      // Construct using com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = 0;

        reason_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.internal_static_RpcResponse_descriptor;
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse getDefaultInstanceForType() {
        return com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.getDefaultInstance();
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse build() {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse buildPartial() {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse result = new com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse(this);
        result.code_ = code_;
        result.reason_ = reason_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse) {
          return mergeFrom((com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse other) {
        if (other == com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse.getDefaultInstance()) return this;
        if (other.getCode() != 0) {
          setCode(other.getCode());
        }
        if (!other.getReason().isEmpty()) {
          reason_ = other.reason_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int code_ ;
      /**
       * <code>int32 code = 1;</code>
       */
      public int getCode() {
        return code_;
      }
      /**
       * <code>int32 code = 1;</code>
       */
      public Builder setCode(int value) {

        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 code = 1;</code>
       */
      public Builder clearCode() {

        code_ = 0;
        onChanged();
        return this;
      }

      private Object reason_ = "";
      /**
       * <code>string reason = 2;</code>
       */
      public String getReason() {
        Object ref = reason_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          reason_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public com.google.protobuf.ByteString
          getReasonBytes() {
        Object ref = reason_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          reason_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReason(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        reason_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder clearReason() {

        reason_ = getDefaultInstance().getReason();
        onChanged();
        return this;
      }
      /**
       * <code>string reason = 2;</code>
       */
      public Builder setReasonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        reason_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:RpcResponse)
    }

    // @@protoc_insertion_point(class_scope:RpcResponse)
    private static final com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse();
    }

    public static com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RpcResponse>
        PARSER = new com.google.protobuf.AbstractParser<RpcResponse>() {
      public RpcResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new RpcResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RpcResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<RpcResponse> getParserForType() {
      return PARSER;
    }

    public com.ranze.literpc.protocol.lite.LiteRpcProto.RpcResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcMeta_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RpcMeta_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcRequest_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RpcRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RpcResponse_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RpcResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\rliterpc.proto\"m\n\007RpcMeta\022\016\n\006callId\030\001 \001" +
      "(\003\022\024\n\014compressType\030\002 \001(\005\022\034\n\007request\030\003 \001(" +
      "\0132\013.RpcRequest\022\036\n\010response\030\004 \001(\0132\014.RpcRe" +
      "sponse\"5\n\nRpcRequest\022\023\n\013serviceName\030\001 \001(" +
      "\t\022\022\n\nmethodName\030\002 \001(\t\"+\n\013RpcResponse\022\014\n\004" +
      "code\030\001 \001(\005\022\016\n\006reason\030\002 \001(\tB/\n\037com.ranze." +
      "literpc.protocol.liteB\014LiteRpcProtob\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_RpcMeta_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RpcMeta_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RpcMeta_descriptor,
        new String[] { "CallId", "CompressType", "Request", "Response", });
    internal_static_RpcRequest_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_RpcRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RpcRequest_descriptor,
        new String[] { "ServiceName", "MethodName", });
    internal_static_RpcResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_RpcResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RpcResponse_descriptor,
        new String[] { "Code", "Reason", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
